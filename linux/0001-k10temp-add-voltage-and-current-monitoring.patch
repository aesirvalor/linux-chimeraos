From fd27845c72c49fd4f8e43b2a6e585fac8ec077ae Mon Sep 17 00:00:00 2001
From: bouhaa <boukehaarsma23@gmail.com>
Date: Sat, 22 Jul 2023 11:03:56 +0200
Subject: [PATCH 1/2] k10temp: add voltage and current monitoring

Mostly based on zenpower(3), librehardwaremonitor and older k10temp commits
---
 drivers/hwmon/k10temp.c | 148 ++++++++++++++++++++++++++++++++++++++++
 1 file changed, 148 insertions(+)

diff --git a/drivers/hwmon/k10temp.c b/drivers/hwmon/k10temp.c
index 7b177b9fbb097..8b9022fc6c833 100644
--- a/drivers/hwmon/k10temp.c
+++ b/drivers/hwmon/k10temp.c
@@ -77,6 +77,32 @@ static DEFINE_MUTEX(nb_smu_ind_mutex);
 #define ZEN_CUR_TEMP_RANGE_SEL_MASK		BIT(19)
 #define ZEN_CUR_TEMP_TJ_SEL_MASK		GENMASK(17, 16)
 
+/* F17H_M01H_SVI, should be renamed to something generic I think... */
+
+#define F17H_M01H_SVI_BASE                  0x0005A000
+#define F17H_M02H_SVI_BASE                  0x0006F000
+
+#define F17H_M01H_SVI_TEL_PLANE0            (F17H_M01H_SVI_BASE + 0xC)
+#define F17H_M01H_SVI_TEL_PLANE1            (F17H_M01H_SVI_BASE + 0x10)
+
+#define F17H_M30H_SVI_TEL_PLANE0            (F17H_M01H_SVI_BASE + 0x14)
+#define F17H_M30H_SVI_TEL_PLANE1            (F17H_M01H_SVI_BASE + 0x10)
+
+#define F17H_M60H_SVI_TEL_PLANE0            (F17H_M02H_SVI_BASE + 0x38)
+#define F17H_M60H_SVI_TEL_PLANE1            (F17H_M02H_SVI_BASE + 0x3C)
+
+#define F17H_M70H_SVI_TEL_PLANE0            (F17H_M01H_SVI_BASE + 0x10)
+#define F17H_M70H_SVI_TEL_PLANE1            (F17H_M01H_SVI_BASE + 0xC)
+/* ZEN3 SP3/TR */
+#define F19H_M01H_SVI_TEL_PLANE0            (F17H_M01H_SVI_BASE + 0x14)
+#define F19H_M01H_SVI_TEL_PLANE1            (F17H_M01H_SVI_BASE + 0x10)
+/* ZEN3 Ryzen desktop */
+#define F19H_M21H_SVI_TEL_PLANE0            (F17H_M01H_SVI_BASE + 0x10)
+#define F19H_M21H_SVI_TEL_PLANE1            (F17H_M01H_SVI_BASE + 0xC)
+/* ZEN3 APU */
+#define F19H_M50H_SVI_TEL_PLANE0            (F17H_M02H_SVI_BASE + 0x38)
+#define F19H_M50H_SVI_TEL_PLANE1            (F17H_M02H_SVI_BASE + 0x3C)
+
 struct k10temp_data {
 	struct pci_dev *pdev;
 	void (*read_htcreg)(struct pci_dev *pdev, u32 *regval);
@@ -86,6 +112,9 @@ struct k10temp_data {
 	u32 show_temp;
 	bool is_zen;
 	u32 ccd_offset;
+	u32 svi_addr[2];
+	bool show_current;
+	int cfactor[2];
 };
 
 #define TCTL_BIT	0
@@ -179,6 +208,16 @@ static const char *k10temp_temp_label[] = {
 	"Tccd12",
 };
 
+static const char *k10temp_in_label[] = {
+	"Vcore",
+	"Vsoc",
+};
+
+static const char *k10temp_curr_label[] = {
+	"Icore",
+	"Isoc",
+};
+
 static int k10temp_read_labels(struct device *dev,
 			       enum hwmon_sensor_types type,
 			       u32 attr, int channel, const char **str)
@@ -187,6 +226,50 @@ static int k10temp_read_labels(struct device *dev,
 	case hwmon_temp:
 		*str = k10temp_temp_label[channel];
 		break;
+	case hwmon_in:
+		*str = k10temp_in_label[channel];
+		break;
+	case hwmon_curr:
+		*str = k10temp_curr_label[channel];
+		break;
+	default:
+		return -EOPNOTSUPP;
+	}
+	return 0;
+}
+
+static int k10temp_read_curr(struct device *dev, u32 attr, int channel,
+			     long *val)
+{
+	struct k10temp_data *data = dev_get_drvdata(dev);
+	u32 regval;
+
+	switch (attr) {
+	case hwmon_curr_input:
+		amd_smn_read(amd_pci_dev_to_node_id(data->pdev),
+			     data->svi_addr[channel], &regval);
+		*val = DIV_ROUND_CLOSEST(data->cfactor[channel] *
+					 (regval & 0xff),
+					 1000);
+		break;
+	default:
+		return -EOPNOTSUPP;
+	}
+	return 0;
+}
+
+static int k10temp_read_in(struct device *dev, u32 attr, int channel, long *val)
+{
+	struct k10temp_data *data = dev_get_drvdata(dev);
+	u32 regval;
+
+	switch (attr) {
+	case hwmon_in_input:
+		amd_smn_read(amd_pci_dev_to_node_id(data->pdev),
+			     data->svi_addr[channel], &regval);
+		regval = (regval >> 16) & 0xff;
+		*val = DIV_ROUND_CLOSEST(155000 - regval * 625, 100);
+		break;
 	default:
 		return -EOPNOTSUPP;
 	}
@@ -246,6 +329,10 @@ static int k10temp_read(struct device *dev, enum hwmon_sensor_types type,
 	switch (type) {
 	case hwmon_temp:
 		return k10temp_read_temp(dev, attr, channel, val);
+	case hwmon_in:
+		return k10temp_read_in(dev, attr, channel, val);
+	case hwmon_curr:
+		return k10temp_read_curr(dev, attr, channel, val);
 	default:
 		return -EOPNOTSUPP;
 	}
@@ -294,6 +381,11 @@ static umode_t k10temp_is_visible(const void *_data,
 			return 0;
 		}
 		break;
+	case hwmon_in:
+	case hwmon_curr:
+		if (!data->show_current)
+			return 0;
+		break;
 	default:
 		return 0;
 	}
@@ -352,6 +444,14 @@ static const struct hwmon_channel_info * const k10temp_info[] = {
 			   HWMON_T_INPUT | HWMON_T_LABEL,
 			   HWMON_T_INPUT | HWMON_T_LABEL,
 			   HWMON_T_INPUT | HWMON_T_LABEL),
+
+	HWMON_CHANNEL_INFO(in,
+			HWMON_I_INPUT | HWMON_I_LABEL,
+			HWMON_I_INPUT | HWMON_I_LABEL),
+
+	HWMON_CHANNEL_INFO(curr,
+			HWMON_C_INPUT | HWMON_C_LABEL,
+			HWMON_C_INPUT | HWMON_C_LABEL),
 	NULL
 };
 
@@ -404,6 +504,7 @@ static int k10temp_probe(struct pci_dev *pdev, const struct pci_device_id *id)
 
 	data->pdev = pdev;
 	data->show_temp |= BIT(TCTL_BIT);	/* Always show Tctl */
+	data->show_current = false;
 
 	if (boot_cpu_data.x86 == 0x15 &&
 	    ((boot_cpu_data.x86_model & 0xf0) == 0x60 ||
@@ -420,14 +521,40 @@ static int k10temp_probe(struct pci_dev *pdev, const struct pci_device_id *id)
 		case 0x8:	/* Zen+ */
 		case 0x11:	/* Zen APU */
 		case 0x18:	/* Zen+ APU */
+			data->show_current = true;
+			data->svi_addr[0] = F17H_M01H_SVI_TEL_PLANE0;
+			data->svi_addr[1] = F17H_M01H_SVI_TEL_PLANE1;
 			data->ccd_offset = 0x154;
+			data->cfactor[0] = 1039211;
+			data->cfactor[1] = 360772;
 			k10temp_get_ccd_support(pdev, data, 4);
 			break;
 		case 0x31:	/* Zen2 Threadripper */
+			data->show_current = true;
+			data->svi_addr[0] = F17H_M30H_SVI_TEL_PLANE0;
+			data->svi_addr[1] = F17H_M30H_SVI_TEL_PLANE1;
+			data->ccd_offset = 0x154;
+			data->cfactor[0] = 658823;
+			data->cfactor[1] = 294300;
+			k10temp_get_ccd_support(pdev, data, 8);
+			break;
 		case 0x60:	/* Renoir */
 		case 0x68:	/* Lucienne */
+			data->show_current = true;
+			data->svi_addr[0] = F17H_M60H_SVI_TEL_PLANE0;
+			data->svi_addr[1] = F17H_M60H_SVI_TEL_PLANE1;
+			data->ccd_offset = 0x154;
+			data->cfactor[0] = 658823;
+			data->cfactor[1] = 294300;
+			k10temp_get_ccd_support(pdev, data, 8);
+			break;
 		case 0x71:	/* Zen2 */
+			data->show_current = true;
+			data->svi_addr[0] = F17H_M70H_SVI_TEL_PLANE0;
+			data->svi_addr[1] = F17H_M70H_SVI_TEL_PLANE1;
 			data->ccd_offset = 0x154;
+			data->cfactor[0] = 658823;
+			data->cfactor[1] = 294300;
 			k10temp_get_ccd_support(pdev, data, 8);
 			break;
 		case 0xa0 ... 0xaf:
@@ -442,9 +569,30 @@ static int k10temp_probe(struct pci_dev *pdev, const struct pci_device_id *id)
 
 		switch (boot_cpu_data.x86_model) {
 		case 0x0 ... 0x1:	/* Zen3 SP3/TR */
+			data->show_current = true;
+			data->svi_addr[0] = F19H_M01H_SVI_TEL_PLANE0;
+			data->svi_addr[1] = F19H_M01H_SVI_TEL_PLANE1;
+			data->ccd_offset = 0x154;
+			data->cfactor[0] = 658823;
+			data->cfactor[1] = 294300;
+			k10temp_get_ccd_support(pdev, data, 8);
+			break;
 		case 0x21:		/* Zen3 Ryzen Desktop */
+			data->show_current = true;
+			data->svi_addr[0] = F19H_M21H_SVI_TEL_PLANE0;
+			data->svi_addr[1] = F19H_M21H_SVI_TEL_PLANE1;
+			data->ccd_offset = 0x154;
+			data->cfactor[0] = 658823;
+			data->cfactor[1] = 294300;
+			k10temp_get_ccd_support(pdev, data, 8);
+			break;
 		case 0x50 ... 0x5f:	/* Green Sardine */
+			data->show_current = true;
+			data->svi_addr[0] = F19H_M50H_SVI_TEL_PLANE0;
+			data->svi_addr[1] = F19H_M50H_SVI_TEL_PLANE1;
 			data->ccd_offset = 0x154;
+			data->cfactor[0] = 658823;
+			data->cfactor[1] = 294300;
 			k10temp_get_ccd_support(pdev, data, 8);
 			break;
 		case 0x40 ... 0x4f:	/* Yellow Carp */
-- 
2.41.0


From 3079e1ac3521d0bbc446ab99bbc24dec43f8ba0b Mon Sep 17 00:00:00 2001
From: bouhaa <boukehaarsma23@gmail.com>
Date: Sun, 23 Jul 2023 16:49:57 +0200
Subject: [PATCH 2/2] k10temp: add power sensor

Doing this in userspace could lead to weird transition phases.
---
 drivers/hwmon/k10temp.c | 35 +++++++++++++++++++++++++++++++++++
 1 file changed, 35 insertions(+)

diff --git a/drivers/hwmon/k10temp.c b/drivers/hwmon/k10temp.c
index 8b9022fc6c833..2e2eb09713cdb 100644
--- a/drivers/hwmon/k10temp.c
+++ b/drivers/hwmon/k10temp.c
@@ -218,6 +218,11 @@ static const char *k10temp_curr_label[] = {
 	"Isoc",
 };
 
+static const char *k10temp_power_label[] = {
+	"Pcore",
+	"Psoc",
+};
+
 static int k10temp_read_labels(struct device *dev,
 			       enum hwmon_sensor_types type,
 			       u32 attr, int channel, const char **str)
@@ -232,6 +237,9 @@ static int k10temp_read_labels(struct device *dev,
 	case hwmon_curr:
 		*str = k10temp_curr_label[channel];
 		break;
+	case hwmon_power:
+		*str = k10temp_power_label[channel];
+		break;
 	default:
 		return -EOPNOTSUPP;
 	}
@@ -276,6 +284,26 @@ static int k10temp_read_in(struct device *dev, u32 attr, int channel, long *val)
 	return 0;
 }
 
+static int k10temp_read_power(struct device *dev, u32 attr, int channel,
+			      long *val)
+{
+	struct k10temp_data *data = dev_get_drvdata(dev);
+	u32 regval;
+	switch (attr) {
+	case hwmon_power_input:
+		amd_smn_read(amd_pci_dev_to_node_id(data->pdev),
+			     data->svi_addr[channel], &regval);
+		*val = DIV_ROUND_CLOSEST(
+			       data->cfactor[channel] * (regval & 0xff), 1000) *
+		       DIV_ROUND_CLOSEST(155000 - ((regval >> 16) & 0xff) * 625,
+					 100);
+		break;
+	default:
+		return -EOPNOTSUPP;
+	}
+	return 0;
+}
+
 static int k10temp_read_temp(struct device *dev, u32 attr, int channel,
 			     long *val)
 {
@@ -333,6 +361,8 @@ static int k10temp_read(struct device *dev, enum hwmon_sensor_types type,
 		return k10temp_read_in(dev, attr, channel, val);
 	case hwmon_curr:
 		return k10temp_read_curr(dev, attr, channel, val);
+	case hwmon_power:
+		return k10temp_read_power(dev, attr, channel, val);
 	default:
 		return -EOPNOTSUPP;
 	}
@@ -383,6 +413,7 @@ static umode_t k10temp_is_visible(const void *_data,
 		break;
 	case hwmon_in:
 	case hwmon_curr:
+	case hwmon_power:
 		if (!data->show_current)
 			return 0;
 		break;
@@ -452,6 +483,10 @@ static const struct hwmon_channel_info * const k10temp_info[] = {
 	HWMON_CHANNEL_INFO(curr,
 			HWMON_C_INPUT | HWMON_C_LABEL,
 			HWMON_C_INPUT | HWMON_C_LABEL),
+
+	HWMON_CHANNEL_INFO(power,
+			HWMON_P_INPUT | HWMON_P_LABEL,
+			HWMON_P_INPUT | HWMON_P_LABEL),
 	NULL
 };
 
-- 
2.41.0

